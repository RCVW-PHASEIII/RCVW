project( GNSSPlugin VERSION 4.0.0 LANGUAGES CXX )

SET (TMX_PLUGIN_NAME GNSS)

ADD_TMX_PLUGIN ()

FIND_PATH (GPS_INCLUDE_DIR NAMES gps.h HINTS /usr /usr/local PATH_SUFFIXES include)
FIND_LIBRARY (GPS_LIBRARY gps) 

# Check the version of the found GPSD is at least to API 9
FILE(STRINGS "${GPS_INCLUDE_DIR}/gps.h" GPSD_API_MAJOR_VERSION REGEX GPSD_API_MAJOR_VERSION)
STRING(REGEX REPLACE "^#define GPSD_API_MAJOR_VERSION\t\t*([0-9]*).*" "\\1" GPSD_API_MAJOR_VERSION "${GPSD_API_MAJOR_VERSION}")

SET (GPSD_MIN_API_MAJOR_VERSION 9)

IF (${GPSD_API_MAJOR_VERSION} LESS ${GPSD_MIN_API_MAJOR_VERSION})
	MESSAGE (STATUS "GPS API Version ${GPSD_API_MAJOR_VERSION} does not meet the minimum ${GPSD_MIN_API_MAJOR_VERSION}")
	MESSAGE (STATUS "Resorting to static GPSD library") 

	UNSET (GPS_INCLUDE_DIR CACHE)
	UNSET (GPS_LIBRARY CACHE)
	
	FIND_PATH (GPS_INCLUDE_DIR NAMES gps.h 
			   PATHS ${CMAKE_CURRENT_SOURCE_DIR}/../../tmx-build/gpsd/usr/local/include
			   NO_DEFAULT_PATH)		   
	FIND_LIBRARY (GPS_LIBRARY gps PATHS ${GPS_INCLUDE_DIR}/../lib NO_DEFAULT_PATH) 
ENDIF ()

MESSAGE (STATUS "${GPS_INCLUDE_DIR}")	
MESSAGE (STATUS "${GPS_LIBRARY}")

TARGET_COMPILE_DEFINITIONS ( ${PROJECT_NAME} PRIVATE IGNORE_RTCM2 )
TARGET_INCLUDE_DIRECTORIES ( ${PROJECT_NAME} PUBLIC ${CMAKE_CURRENT_SOURCE_DIR}/include ${GPS_INCLUDE_DIR} )
TARGET_LINK_LIBRARIES ( ${PROJECT_NAME} PUBLIC ${GPS_LIBRARY})
